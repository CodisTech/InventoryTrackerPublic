name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment for deployment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development

jobs:
  detect-repository-type:
    runs-on: ubuntu-latest
    outputs:
      repository-type: ${{ steps.detect.outputs.repository-type }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        
      - name: Detect repository type
        id: detect
        run: |
          if [ -f .repository-type ]; then
            REPO_TYPE=$(cat .repository-type)
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            REPO_TYPE="private"
          elif [ "${{ github.ref }}" = "refs/heads/public" ]; then
            REPO_TYPE="public"
          elif [ "${{ github.ref }}" = "refs/heads/sandbox" ]; then
            REPO_TYPE="sandbox"
          else
            REPO_TYPE="private"
          fi
          echo "repository-type=$REPO_TYPE" >> $GITHUB_OUTPUT
          echo "Detected repository type: $REPO_TYPE"
  
  build-and-deploy:
    needs: detect-repository-type
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    env:
      REPOSITORY_TYPE: ${{ needs.detect-repository-type.outputs.repository-type }}
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create repository type marker
        run: |
          echo "${{ env.REPOSITORY_TYPE }}" > .repository-type
          echo "window.__REPOSITORY_TYPE__ = '${{ env.REPOSITORY_TYPE }}';" > repository-type.js
      
      - name: Build application
        run: |
          npm run build
        env:
          NODE_ENV: production
          REPOSITORY_TYPE: ${{ env.REPOSITORY_TYPE }}
      
      - name: Run tests
        run: npm test
      
      - name: Prepare deployment
        run: |
          echo "Preparing deployment for ${{ env.REPOSITORY_TYPE }} repository"
          echo "Building version: $(node -p "require('./package.json').version")"
          echo "Build date: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          echo "Commit: ${{ github.sha }}"
      
      - name: Deploy to hosting
        # This step would be customized based on your hosting provider
        # For example, deploying to Vercel, Netlify, AWS, etc.
        run: |
          echo "Deploying to ${{ github.event.inputs.environment || 'production' }} environment"
          echo "Repository type: ${{ env.REPOSITORY_TYPE }}"
          # Replace with your actual deployment commands
          # e.g., netlify deploy --prod
          # or    vercel --prod
      
      - name: Update deployment status
        run: |
          echo "Deployment completed successfully at $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
          echo "Repository type: ${{ env.REPOSITORY_TYPE }}"